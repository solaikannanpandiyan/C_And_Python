1) Write a program to merge two sorted arrays into a third sorted array.
int arr1[5] = {3, 4, 7, 9, 10}
int arr2[5] = {1, 2, 5, 6, 8}
output:
[1,2,3,4,5,6,7,8,9,10]

2) Write a program to find the frequency of each element in an array.
int arr1[5] = {1, 4, 7, 9, 10}
// all numbers are always lesser than 10 
// arr[i] in range[0,9] for any arr[i] for any 0 <= i < n
// Tip: use an array as frequency counter

3) Shift All Zeros to the End of the Array
int arr[5] = {0,1,0,1,0}
// after moving the zeros
arr[5] = {0,0,0,1,1}

4) right rotate an array 
int arr1[5] = {1, 4, 7, 9, 10}
// Examples:
rotate 1 time to right
int arr1[5] = {10, 1, 4, 7, 9}
rotate 2 time to right
int arr1[5] = {9, 10, 1, 4, 7}

5) find the missing no in an array of positive numbers
int arr[5] = {1, 2, 3, 5, 6}
// missing number is 4 here

ASSESSMENT:
click on the below link to attend the ASSESSMENT:
https://tinyurl.com/KCGAssessment4

FEEDBACK: without fail
https://thebettertomorrow.in/Students

6) total sum, rowwise and column wise sum
int arr[][3] = {{1,2,3}, {4,5,6}, {7,8,9}};

7) create a 2D array find the maximum element
int arr[][3] = {{1,2,3}, {4,5,6}, {7,8,9}};

8) rotate a matrix by 90 degree
// inmemory
// use extra space
int arr[][3] = {{1,2,3}, {4,5,6}, {7,8,9}};
1 2 3 
4 5 6
7 8 9
output:
7 4 1
8 5 2
9 6 3

9) transpose of a matrix:
// inmemory is hard
// use extra space
input:
int arr[][3] = {{1,2,3}, {4,5,6}, {7,8,9}};
1 2 3 
4 5 6
7 8 9
output:
1 4 7
2 5 8
3 6 9